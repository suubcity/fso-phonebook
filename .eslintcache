[{"/home/martyn/Documents/projects/fso-phonebook/src/index.js":"1","/home/martyn/Documents/projects/fso-phonebook/src/App.js":"2","/home/martyn/Documents/projects/fso-phonebook/src/services/persons.js":"3"},{"size":219,"mtime":1611251537835,"results":"4","hashOfConfig":"5"},{"size":4982,"mtime":1611251941639,"results":"6","hashOfConfig":"5"},{"size":461,"mtime":1611014374107,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1azzqpj",{"filePath":"11","messages":"12","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"/home/martyn/Documents/projects/fso-phonebook/src/index.js",[],["18","19"],"/home/martyn/Documents/projects/fso-phonebook/src/App.js",["20","21"],"import React, { useState, useEffect, useDebugValue } from \"react\";\nimport personsService from \"./services/persons\";\nconst App = () => {\n  const useStateWithLabel = (initialValue, name) => {\n    const [value, setValue] = useState(initialValue);\n    useDebugValue(`${name}: ${value}`);\n    return [value, setValue];\n  };\n  //States\n  const [persons, setPersons] = useStateWithLabel([], \"persons\");\n  const [newName, setNewName] = useStateWithLabel(\"\", \"newName\");\n  const [newNumber, setNewNumber] = useStateWithLabel(\"\", \"newNumber\");\n  const [newSearch, setNewSearch] = useStateWithLabel(\"\", \"search\");\n  const [message, setMessage] = useStateWithLabel(null, \"message\");\n  const [errorMessage, setErrorMessage] = useStateWithLabel(\n    null,\n    \"errorMessage\"\n  );\n  //Functions\n  useEffect(() => {\n    getAll();\n  }, []);\n\n  const handleNameChange = (e) => {\n    setNewName(e.target.value);\n  };\n\n  const handleNumberChange = (e) => {\n    setNewNumber(e.target.value);\n  };\n\n  const getAll = () => {\n    personsService.getAll().then((res) => {\n      setPersons(res.data);\n    });\n  };\n\n  const personAlreadyExists = () => {\n    return persons.find((person) => person.name === newName);\n  };\n\n  const addNewPerson = () => {\n    personsService\n      .create({\n        name: newName,\n        number: newNumber,\n      })\n      .then((res) => {\n        setPersons(persons.concat(res.data));\n        displayNotification(`${newName} was added to phone book.`);\n      });\n  };\n\n  const findIdOfPerson = () => {\n    const foundPerson = persons.find((person) => {\n      return person.name === newName;\n    });\n    return foundPerson.id;\n  };\n\n  const updatePerson = () => {\n    const updatedPerson = { name: newName, number: newNumber };\n    const id = findIdOfPerson();\n\n    personsService.update(id, updatedPerson).then((res) => {\n      //use res object to update person in array\n      // setPersons()\n      // persons.data.name\n    });\n  };\n\n  const clearInputs = () => {\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  const handleAdd = (e) => {\n    e.preventDefault();\n\n    if (personAlreadyExists()) {\n      if (\n        window.confirm(\n          `${newName} already exists in phonebook. Replace old number with new one?`\n        )\n      ) {\n        updatePerson();\n\n        getAll();\n        clearInputs();\n      } else {\n        clearInputs();\n      }\n    } else {\n      addNewPerson();\n      clearInputs();\n    }\n  };\n\n  const handleSearchChange = (e) => {\n    setNewSearch(e.target.value);\n  };\n\n  const handleDelete = (e) => {\n    const { name, id } = e.target.dataset;\n    if (window.confirm(`Delete ${name}`)) {\n      personsService\n        .remove(id)\n        .then(() => displayNotification(`${name} was deleted`));\n\n      getAll();\n    }\n  };\n\n  const filterPersons = () => {\n    const regex = new RegExp(newSearch, \"gi\");\n\n    return persons.filter((person) => person.name.match(regex));\n  };\n\n  const displayPersons = () => {\n    return filterPersons().map((person) => (\n      <div key={person.name}>\n        {person.name} {person.number}{\" \"}\n        <button\n          onClick={handleDelete}\n          data-id={person.id}\n          data-name={person.name}\n        >\n          delete\n        </button>\n      </div>\n    ));\n  };\n\n  const displayNotification = (message) => {\n    setMessage(message);\n    setTimeout(() => {\n      setMessage(null);\n    }, 5000);\n  };\n\n  const displayError = (errorMessage) => {\n    setErrorMessage(errorMessage);\n    setTimeout(() => {\n      setErrorMessage(null);\n    }, 5000);\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <Error errorMessage={errorMessage} />\n      <Search handleChange={handleSearchChange} newSearch={newSearch} />\n\n      <h3>add a new</h3>\n      <Form\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        handleClick={handleAdd}\n        newName={newName}\n        newNumber={newNumber}\n      />\n\n      <h3>Numbers</h3>\n      {displayPersons()}\n    </div>\n  );\n};\n\n//React Modules\n\nconst Search = ({ handleChange, newSearch }) => {\n  return (\n    <div>\n      filter shown with\n      <input onChange={handleChange} value={newSearch} />\n    </div>\n  );\n};\n\nconst Form = ({\n  handleNameChange,\n  handleNumberChange,\n  handleClick,\n  newName,\n  newNumber,\n}) => {\n  return (\n    <form>\n      <div>\n        name: <input onChange={handleNameChange} value={newName} />\n      </div>\n      <div>\n        number: <input onChange={handleNumberChange} value={newNumber} />\n      </div>\n      <div>\n        <button onClick={handleClick} type=\"submit\">\n          add\n        </button>\n      </div>\n    </form>\n  );\n};\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n  return <div className=\"notification\">{message}</div>;\n};\n\nconst Error = ({ errorMessage }) => {\n  if (errorMessage === null) {\n    return null;\n  }\n  return <div className=\"error\">{errorMessage}</div>;\n};\n\nexport default App\n","/home/martyn/Documents/projects/fso-phonebook/src/services/persons.js",["22"],"import axios from \"axios\";\nconst baseUrl = \"http://localhost:3001/api/persons\";\n\nconst getAll = () => {\n  return axios.get(baseUrl);\n};\n\nconst create = (newObject) => {\n  return axios.post(baseUrl, newObject);\n};\n\nconst remove = (id) => {\n  return axios.delete(`${baseUrl}/${id}`);\n};\n\nconst update = (id, updatedObject) => {\n  updatedObject.id = id;  \n  return axios.put(baseUrl, updatedObject);\n};\n\nexport default {\n  getAll,\n  create,\n  remove,\n  update,\n};\n",["23","24"],{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","severity":1,"message":"30","line":22,"column":6,"nodeType":"31","endLine":22,"endColumn":8,"suggestions":"32"},{"ruleId":"33","severity":1,"message":"34","line":142,"column":9,"nodeType":"35","messageId":"36","endLine":142,"endColumn":21},{"ruleId":"37","severity":1,"message":"38","line":21,"column":1,"nodeType":"39","endLine":26,"endColumn":3},{"ruleId":"25","replacedBy":"40"},{"ruleId":"27","replacedBy":"41"},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAll'. Either include it or remove the dependency array.","ArrayExpression",["44"],"no-unused-vars","'displayError' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["42"],["43"],"no-global-assign","no-unsafe-negation",{"desc":"45","fix":"46"},"Update the dependencies array to be: [getAll]",{"range":"47","text":"48"},[819,821],"[getAll]"]